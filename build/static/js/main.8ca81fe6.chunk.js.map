{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","searchHandler","placeholder","type","onChange","e","target","value","App","setState","searchTerm","state","error","axios","get","response","this","data","filteredMonsters","filter","toLowerCase","includes","class","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAGaA,G,MAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAWC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACxF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCHTC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAACP,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCH5CO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAlB,OACvB,uBAAOZ,UAAU,QAAQa,KAAK,SAASD,YAAaA,EAAaE,SAAU,SAACC,GAC1EJ,EAAcI,EAAEC,OAAOC,YCkDZC,G,wDAhDb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IASRY,cAAgB,SAACM,GACf,EAAKE,SAAS,CACZC,WAAYH,KAVd,EAAKI,MAAQ,CACXb,SAAU,GACVc,MAAO,GACPF,WAAY,IALG,E,yMAkBQG,IAAMC,IAAI,8C,OAA3BC,E,OACNC,KAAKP,UAAS,WACZ,MAAO,CACLX,SAAUiB,EAASE,S,gDAIvBD,KAAKP,UAAS,WACZ,MAAO,CACLG,MAAO,2B,8IAML,IAAD,EAC0BI,KAAKL,MAA9Bb,EADD,EACCA,SAAUY,EADX,EACWA,WACZQ,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASX,EAAWU,kBAEnG,OACE,sBAAK9B,UAAU,MAAf,UACG0B,KAAKL,MAAMC,OAAS,oBAAIU,MAAM,QAAV,SAAmBN,KAAKL,MAAMC,QACnD,kDACA,cAAC,EAAD,CAAWX,cAAee,KAAKf,cAAeC,YAAY,oBAC1D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3CVK,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ca81fe6.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img className='card-img' src={`https://robohash.org/${props.monster.id}?set=set2`} alt='monster' />\n    <h3>{props.monster.name}</h3>\n    <p>{props.monster.email}</p>\n  </div>\n)","import React from 'react'\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    { props.monsters.map((monster) => <Card key={monster.id} monster={monster}></Card>)}\n  </div>\n)","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ searchHandler, placeholder }) => (\n  <input className='input' type='search' placeholder={placeholder} onChange={(e) => {\n    searchHandler(e.target.value)\n  }} />\n)","import React from 'react'\nimport axios from 'axios'\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      monsters: [],\n      error: '',\n      searchTerm: ''\n    }\n\n  }\n\n  searchHandler = (value) => {\n    this.setState({\n      searchTerm: value\n    })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n      this.setState(() => {\n        return {\n          monsters: response.data\n        }\n      })\n    } catch (error) {\n      this.setState(() => {\n        return {\n          error: 'Unable to fetch data'\n        }\n      })\n    }\n  }\n\n  render() {\n    const { monsters, searchTerm } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n    return (\n      <div className='App'>\n        {this.state.error && <h3 class=\"error\">{this.state.error}</h3>}\n        <h2>Monsters Rolodex</h2>\n        <SearchBox searchHandler={this.searchHandler} placeholder=\"Search Monsters\" />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}